name: Main build
on:
  push:
    branches:
      - unit-testing
      - test/integration-testing-setup

jobs:
  UnitTests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Unit Tests
        run: mvn -Dtest=com.napier.devops.AppTest test
      - name: Set up Node
        uses: actions/setup-node@v4
      - name: Install dependencies
        run: mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      - name: Run tests
        run: mvn -B test
      - name: CodeCov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          directory: ./target/site/jacoco
          flags: Unit Tests # optional
          verbose: true # optional (default = false)

  IntegrationTests:
    name: Integration Test Build Action
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Integration Tests
      run: |
        docker build -t database ./db
        docker run --name world -dp 33060:3306 database
        mvn -Dtest=com.napier.devops.AppIntegrationTest test
        docker stop world
        docker rm world
        docker image rm database
    - name: Install dependencies
      run: mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
    - name: Run tests
      run: mvn -B test
    - name: CodeCov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        directory: ./target/site/jacoco
        flags: Integration Tests # optional
        verbose: true # optional (default = false)

  build:
    name: Build and Start Using docker-compose
    runs-on: ubuntu-20.04
    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      # Package with Maven (skip tests)
      - name: Package with Maven
        run: mvn package -DskipTests

      # Unit test (will not fail if no tests are found)
      #- name: Unit tests
       # run: mvn -Dtest=com.napier.devops.AppTest test

      # Package and run Docker Compose
      - name: Package and Run Docker Compose
        run: |
          docker compose up --abort-on-container-exit

      # Optionally, you can remove the container after logs
      - name: Clean up Docker container
        run: docker compose down
